version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - control

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - control
  eureka:
    image: eureka-discovery
    container_name: eureka
    ports:
      - "8761:8761"
    environment:
      eureka.instance.hostname: eureka
      eureka.client.serviceUrl.defaultZone: http://eureka:8761/eureka/
    networks:
      - control

  gateway:
    image: gateway-service
    container_name: gateway
    ports:
      - "8888:8888"
    environment:
      EUREKA_SERVER_ADDRESS: http://eureka:8761/eureka/
      KEYCLOAK_REALM: products-app
      KEYCLOAK_CLIENT: products-app
      KEYCLOAK_ADDRESS: http://host.docker.internal:8080
    depends_on:
      - eureka
    networks:
      - control

  random-orders:
    image: random-order-generator
    container_name: random-order-generator
    ports:
      - "8084:8084"
    environment:
      EUREKA_SERVER_ADDRESS: http://eureka:8761/eureka/
      BROKER_ADDRESS: broker:29092
      KEYCLOAK_REALM: products-app
      KEYCLOAK_CLIENT: products-app
      KEYCLOAK_ADDRESS: http://host.docker.internal:8080
    depends_on:
      - eureka
      - zookeeper
      - broker
      - customer-service
      - inventory-service
    networks:
      - control

  analytics-service:
    image: analytics-service
    container_name: analytics-service
    ports:
      - "8086:8086"
    environment:
      EUREKA_SERVER_ADDRESS: http://eureka:8761/eureka/
      BROKER_ADDRESS: broker:29092
      KEYCLOAK_REALM: products-app
      KEYCLOAK_CLIENT: products-app
      KEYCLOAK_ADDRESS: http://host.docker.internal:8080
    depends_on:
      - eureka
      - zookeeper
      - broker
    networks:
      - control

  billing-service:
    image: billing-service
    container_name: billing-service
    ports:
      - "8083:8083"
    environment:
      EUREKA_SERVER_ADDRESS: http://eureka:8761/eureka/
      BROKER_ADDRESS: broker:29092
      KEYCLOAK_REALM: products-app
      KEYCLOAK_CLIENT: products-app
      KEYCLOAK_ADDRESS: http://host.docker.internal:8080
    depends_on:
      - eureka
      - zookeeper
      - broker
      - customer-service
      - inventory-service
    networks:
      - control

  customer-service:
    image: customer-service
    container_name: customer-service
    ports:
      - "8081:8081"
    environment:
      EUREKA_SERVER_ADDRESS: http://eureka:8761/eureka/
      BROKER_ADDRESS: broker:29092
      KEYCLOAK_REALM: products-app
      KEYCLOAK_CLIENT: products-app
      KEYCLOAK_ADDRESS: http://host.docker.internal:8080
    depends_on:
      - eureka
      - zookeeper
      - broker
    networks:
      - control

  inventory-service:
    image: inventory-service
    container_name: inventory-service
    ports:
      - "8082:8082"
    environment:
      EUREKA_SERVER_ADDRESS: http://eureka:8761/eureka/
      BROKER_ADDRESS: broker:29092
      KEYCLOAK_REALM: products-app
      KEYCLOAK_CLIENT: products-app
      KEYCLOAK_ADDRESS: http://host.docker.internal:8080
    depends_on:
      - eureka
      - zookeeper
      - broker
    networks:
      - control

  front-end:
    image: ecom-web-frontapp
    container_name: front-end
    ports:
      - "4200:80"
    depends_on:
      - billing-service
      - random-orders
      - analytics-service
      - keycloak
      - customer-service
      - inventory-service
    networks:
      - control

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    ports:
      - "8080:8080"
    networks:
      - control
networks:
  control: